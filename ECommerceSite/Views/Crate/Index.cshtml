@model CrateCatalogueViewModel

@{
    ViewData["Title"] = "Crate Catalog";
}

<h1>Crate Catalog</h1>

@if (TempData["Message"] != null)
{   
    <!--show fades in alert. dismiss allows user to close alert, then it will fade-->
    <div class="alert alert-success alert-dismissible fade show" role = "alert">
        <h2 id="succes_message">
            @TempData["Message"]
            <!--btn-close makes it an x, aria label close after-->
            <button type="button" class = "btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </h2>
    </div>
}

<p>
    <a asp-action="Create" asp-controller="crate">Create Crate</a>
</p>
@if (Model.Crates.Count != 0 && Model.Crates != null)
{
    <div class = "row">
    @*create cards for each crate model*@
    @foreach (Crate item in Model.Crates) 
    {
        <div class = "col-md-4">
            <div class="card" style="width: 18rem;">
              <img src="https://via.placeholder.com/200" class="card-img-top" alt="Cover for @item.Title">
              <div class="card-body">
                <h5 class="card-title">@item.Title</h5>
                <p class="card-text">
                    A description of the crate will go here.
                </p>
                <a class="btn btn-success" asp-controller="Cart" asp-action="Add" asp-route-id="@item.CrateId">Add to Cart</a>
                <br>
                <td>
                    <!--Link to item through it's primary key, asp-controller defaults to the controller you are in -->
                    <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.CrateId">Edit</a>
                   @* @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) | OLDER STYLE OF LINKING TO ITEMS*@
                   <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.CrateId">Details</a>
                   <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.CrateId">Delete</a>
                </td>
              </div>
            </div>
        </div>
    }
    </div>
}
else
{
    <h2>No more crates to show!</h2>
}
@*Create links to every needed page on all pages, nav is for screen readers*@
<nav aria-label="Crates Catalog">
    <ul class="pagination">
    @*string disabled = "page-item disabled"; CANT USE??*@
    @*previous button*@
    @if (Model.CurrentPage == 1)
    {
        <li class="page-item disabled">
            <a class="page-link">Previous</a>
        </li>
    }
    else
    {
        <li class="page-item">
            <a class="page-link" asp-controller="Crate" asp-action="index" asp-route-id="@(Model.CurrentPage - 1)">Previous</a>
        </li>
    }

    @for (int i = 1; i <= Model.NumPages; i++)
    {
        //if on the current page, make it the active page
        if (i == Model.CurrentPage)
        {
            <li class="page-item active">
                <a class="page-link">@i</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link" asp-controller="Crate" asp-action="index" asp-route-id="@i">@i</a>
            </li>        
        }
    }

    @*Next Button*@
    @if (Model.CurrentPage == Model.NumPages)
    {
        <li class="page-item disabled">
            <a class="page-link">Next</a>
        </li>
    }
    else
    {
        <li class="page-item">
            <a class="page-link" asp-controller="Crate" asp-action="index" asp-route-id="@(Model.CurrentPage + 1)">Next</a>
        </li>
    }
    </ul>
</nav>
